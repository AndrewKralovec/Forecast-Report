{
   latitude:37.8267,
   longitude:-122.423,
   timezone:"America/Los_Angeles",
   offset:-7,
   currently:Object,
   minutely:Object,
   hourly:Object,
   daily:Object,
   flags:Object
}
currently:Object
daily:Object
flags:Object
hourly:Object
latitude:41.8093699
longitude:-87.8729122
minutely:Object
offset:-5
timezone:"America/Chicago"


    search(latitude: any, longitude: any){
            let headers = new Headers(); 
            headers.append('Content-Type', 'application/json'); 
            let body = JSON.stringify({ latitude, longitude });
            this.http.post('/api/SampleData/CurrentForecasts',body, { headers: headers })
            .map(response => response.json())
            .subscribe(
                data =>  this.Debug(data),
                err =>  console.log("Error: \n"+err),
                () => console.log('Get Complete')
            ); 
    }
    
            this.fs.getForcast(latitude,longitude)
            .subscribe(
                data =>  this.Debug(data),
                err =>  console.log("Error: \n"+err),
                () => console.log('Get Complete')
            ); 
          
          import { bootstrap }                    from '@angular/platform-browser-dynamic';
import { Component }                    from '@angular/core';
import { CHART_DIRECTIVES, Highcharts } from 'angular2-highcharts'; 


Highcharts.setOptions({
  colors: ['#058DC7', '#50B432', '#ED561B']
});
@Component({
    selector: 'my-app',
    directives: [CHART_DIRECTIVES],
    styles: [`
      chart {
        display: block;
      }
  `]
    template: `<chart [options]="options"></chart>`
})
class AppComponent {
    constructor() {
        this.options = {
            title : { text : 'Weather chart' },
            yAxis: {
                title: {
                    text: 'Tempature '
                }
            },
        xAxis: {
            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
        },
           series: [{
            data: [-10, -5, 0, 28, 35, 65, 85, 90, 5, 0, -5],
            zones: [{
                value: 0,
                color: '#00ccff'
            }, {
                value: 32,
                color: '#ffff00'
            }, 
              {
                value: 60,
                color: '#ff9933'
            },{
                value: 80,
                color: '#ff3300'
            },{
                color: '#ff3300'
            }]
        }]
        };
    } 
    options: Object;
    
}

bootstrap(AppComponent);
